{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koren\\\\OneDrive\\\\Desktop\\\\Computer_Security_Vulnerable\\\\Frontend\\\\src\\\\components\\\\ForgotPassword.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [step, setStep] = useState(1);\n  const [verificationCode, setVerificationCode] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [resetToken, setResetToken] = useState(''); // Added to store the token\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/forgot-password/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to process request');\n      }\n      setSuccess('Verification code sent to your email');\n      setStep(2);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleVerification = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/verify-reset-code/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          code: verificationCode\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Invalid verification code');\n      }\n      setResetToken(data.token); // Save the token\n      setSuccess('Code verified successfully');\n      setStep(3);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/reset-password/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          token: resetToken,\n          // Use the stored token, not the verification code\n          new_password: newPassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to reset password');\n      }\n      setSuccess('Password reset successful');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError(err.message);\n      if (err.message.includes('•')) {\n        // Format password validation errors\n        setError(err.message.split('\\n').join('\\n• '));\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/login'),\n    className: \"back-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Back to Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"login-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Reset Password\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, error.split('\\n').map((line, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    style: {\n      margin: line.startsWith('•') ? '0 0 0 20px' : '0 0 10px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, line))), success && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, success), step === 1 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Enter your email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Send Verification Code\")), step === 2 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleVerification,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter verification code\",\n    value: verificationCode,\n    onChange: e => setVerificationCode(e.target.value),\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Verify Code\")), step === 3 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePasswordReset,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter new password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Reset Password\"))));\n};\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","useNavigate","ForgotPassword","navigate","email","setEmail","error","setError","success","setSuccess","step","setStep","verificationCode","setVerificationCode","newPassword","setNewPassword","resetToken","setResetToken","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","err","message","handleVerification","code","token","handlePasswordReset","new_password","setTimeout","includes","split","join","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","line","index","key","style","margin","startsWith","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["C:/Users/koren/OneDrive/Desktop/Computer_Security_Vulnerable/Frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginForm.css';\r\n\r\nconst ForgotPassword = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [step, setStep] = useState(1);\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [resetToken, setResetToken] = useState(''); // Added to store the token\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/forgot-password/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Failed to process request');\r\n      }\r\n\r\n      setSuccess('Verification code sent to your email');\r\n      setStep(2);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleVerification = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/verify-reset-code/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, code: verificationCode }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Invalid verification code');\r\n      }\r\n\r\n      setResetToken(data.token); // Save the token\r\n      setSuccess('Code verified successfully');\r\n      setStep(3);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/reset-password/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          token: resetToken, // Use the stored token, not the verification code\r\n          new_password: newPassword\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Failed to reset password');\r\n      }\r\n\r\n      setSuccess('Password reset successful');\r\n      setTimeout(() => navigate('/login'), 3000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      if (err.message.includes('•')) {\r\n        // Format password validation errors\r\n        setError(err.message.split('\\n').join('\\n• '));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <button \r\n        onClick={() => navigate('/login')}\r\n        className=\"back-button\"\r\n      >\r\n        Back to Login\r\n      </button>\r\n\r\n      <div className=\"login-card\">\r\n        <h2 className=\"login-title\">Reset Password</h2>\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error.split('\\n').map((line, index) => (\r\n              <p key={index} style={{ margin: line.startsWith('•') ? '0 0 0 20px' : '0 0 10px 0' }}>\r\n                {line}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n        \r\n        {step === 1 && (\r\n          <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"login-input\"\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"login-button\">\r\n              Send Verification Code\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {step === 2 && (\r\n          <form onSubmit={handleVerification} className=\"login-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter verification code\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              className=\"login-input\"\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"login-button\">\r\n              Verify Code\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {step === 3 && (\r\n          <form onSubmit={handlePasswordReset} className=\"login-form\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter new password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              className=\"login-input\"\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"login-button\">\r\n              Reset Password\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}