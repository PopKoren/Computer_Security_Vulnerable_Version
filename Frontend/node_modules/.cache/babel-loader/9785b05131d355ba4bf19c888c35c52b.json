{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koren\\\\OneDrive\\\\Desktop\\\\Project1\\\\Frontend\\\\src\\\\components\\\\RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RegisterForm.css';\nimport { validatePassword } from '../utils/validation';\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    const passwordValidation = validatePassword(formData.password);\n    if (!passwordValidation.isValid) {\n      setError(passwordValidation.message);\n      setLoading(false);\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Registration failed');\n      }\n      navigate('/login');\n    } catch (err) {\n      setError(err.message || 'Failed to connect to server');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"login-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Register\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    value: formData.username,\n    onChange: handleChange,\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: formData.email,\n    onChange: handleChange,\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: formData.password,\n    onChange: handleChange,\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm Password\",\n    value: formData.confirmPassword,\n    onChange: handleChange,\n    className: \"login-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"login-button\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, loading ? 'Registering...' : 'Register')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", ' ', /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/login'),\n    className: \"text-blue-500 hover:text-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Login here\"))));\n}","map":{"version":3,"names":["React","useState","useNavigate","validatePassword","RegisterForm","navigate","formData","setFormData","username","email","password","confirmPassword","error","setError","loading","setLoading","handleSubmit","e","preventDefault","passwordValidation","isValid","message","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","err","handleChange","name","value","target","prev","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","onClick"],"sources":["C:/Users/koren/OneDrive/Desktop/Project1/Frontend/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './RegisterForm.css';\r\nimport { validatePassword } from '../utils/validation';\r\n\r\nexport default function RegisterForm() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    const passwordValidation = validatePassword(formData.password);\r\n    if (!passwordValidation.isValid) {\r\n      setError(passwordValidation.message);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/register/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          email: formData.email,\r\n          password: formData.password\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Registration failed');\r\n      }\r\n\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to connect to server');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2 className=\"login-title\">Register</h2>\r\n        {error && <div className=\"login-error\">{error}</div>}\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            className=\"login-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"login-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className=\"login-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            className=\"login-input\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </button>\r\n        </form>\r\n        <p className=\"mt-4 text-center\">\r\n          Already have an account?{' '}\r\n          <button \r\n            onClick={() => navigate('/login')}\r\n            className=\"text-blue-500 hover:text-blue-700\"\r\n          >\r\n            Login here\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}