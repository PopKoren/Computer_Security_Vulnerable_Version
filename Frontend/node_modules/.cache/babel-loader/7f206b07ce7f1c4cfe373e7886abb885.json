{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const useAuth = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('access');\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    const checkAuth = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/user/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setIsAuthenticated(true);\n          setIsAdmin(data.is_staff);\n        } else {\n          localStorage.removeItem('access');\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        localStorage.removeItem('access');\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  return {\n    isAuthenticated,\n    isAdmin,\n    loading\n  };\n};","map":{"version":3,"names":["useState","useEffect","useAuth","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","loading","setLoading","token","localStorage","getItem","checkAuth","response","fetch","headers","ok","data","json","is_staff","removeItem","error","console"],"sources":["C:/Users/koren/OneDrive/Desktop/Project1/Frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useAuth = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('access');\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const checkAuth = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/user/', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setIsAuthenticated(true);\r\n          setIsAdmin(data.is_staff);\r\n        } else {\r\n          localStorage.removeItem('access');\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        localStorage.removeItem('access');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return { isAuthenticated, isAdmin, loading };\r\n};"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC5C,IAAI,CAACF,KAAK,EAAE;MACVD,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUN,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCd,kBAAkB,CAAC,IAAI,CAAC;UACxBE,UAAU,CAACW,IAAI,CAACE,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACLT,YAAY,CAACU,UAAU,CAAC,QAAQ,CAAC;QACnC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CX,YAAY,CAACU,UAAU,CAAC,QAAQ,CAAC;MACnC;MACAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAET,eAAe;IAAEE,OAAO;IAAEE;EAAQ,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}