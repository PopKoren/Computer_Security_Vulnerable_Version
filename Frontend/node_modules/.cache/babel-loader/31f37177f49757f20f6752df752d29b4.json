{"ast":null,"code":"// src/utils/validation.js\nexport const validatePassword = password => {\n  if (password.length < 8) {\n    return {\n      isValid: false,\n      message: 'Password must be at least 8 characters long'\n    };\n  }\n  if (!/[A-Z]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one uppercase letter'\n    };\n  }\n  if (!/[a-z]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one lowercase letter'\n    };\n  }\n  if (!/[0-9]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one number'\n    };\n  }\n  if (!/[!@#$%^&*]/.test(password)) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one special character (!@#$%^&*)'\n    };\n  }\n  return {\n    isValid: true\n  };\n};","map":{"version":3,"names":["validatePassword","password","length","isValid","message","test"],"sources":["C:/Users/koren/OneDrive/Desktop/Project1/Frontend/src/utils/validation.js"],"sourcesContent":["// src/utils/validation.js\r\nexport const validatePassword = (password) => {\r\n    if (password.length < 8) {\r\n      return {\r\n        isValid: false,\r\n        message: 'Password must be at least 8 characters long'\r\n      };\r\n    }\r\n  \r\n    if (!/[A-Z]/.test(password)) {\r\n      return {\r\n        isValid: false,\r\n        message: 'Password must contain at least one uppercase letter'\r\n      };\r\n    }\r\n  \r\n    if (!/[a-z]/.test(password)) {\r\n      return {\r\n        isValid: false,\r\n        message: 'Password must contain at least one lowercase letter'\r\n      };\r\n    }\r\n  \r\n    if (!/[0-9]/.test(password)) {\r\n      return {\r\n        isValid: false,\r\n        message: 'Password must contain at least one number'\r\n      };\r\n    }\r\n  \r\n    if (!/[!@#$%^&*]/.test(password)) {\r\n      return {\r\n        isValid: false,\r\n        message: 'Password must contain at least one special character (!@#$%^&*)'\r\n      };\r\n    }\r\n  \r\n    return { isValid: true };\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAIC,QAAQ,IAAK;EAC1C,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACvB,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAC3B,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAC3B,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAC3B,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,IAAI,CAAC,YAAY,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAChC,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,OAAO;IAAED,OAAO,EAAE;EAAK,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}